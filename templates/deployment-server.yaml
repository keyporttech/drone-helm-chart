apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "drone.fullname" . }}-server
  labels:
    app: {{ template "drone.name" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
    component: server
spec:
  replicas: 1
  template:
    metadata:
      annotations:
        checksum/secrets: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
{{- if .Values.metrics.prometheus.enabled }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
{{- end }}
{{- if .Values.server.annotations }}
{{ toYaml .Values.server.annotations | indent 8 }}
{{- end }}
      labels:
        app: {{ template "drone.name" . }}
        release: "{{ .Release.Name }}"
        component: server
    spec:
{{- if .Values.server.schedulerName }}
      schedulerName: "{{ .Values.server.schedulerName }}"
{{- end }}
{{- if .Values.server.affinity }}
      affinity:
{{ toYaml .Values.server.affinity | indent 8 }}
{{- end }}
{{- if .Values.server.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.server.nodeSelector | indent 8 }}
{{- end }}
      serviceAccountName: {{ .Values.server.serviceAccount }}
      containers:
      - name: {{ template "drone.fullname" . }}-server
        image: "{{ .Values.images.server.repository }}:{{ .Values.images.server.tag }}"
        imagePullPolicy: {{ .Values.images.server.pullPolicy }}
        env:
          - name: DRONE_KUBERNETES_ENABLED
            value: "true"
          - name: DRONE_RPC_PROTO
            value: http
          - name: DRONE_RPC_HOST
            value: "{{ template "drone.fullname" . }}.{{ .Release.Namespace }}.svc.cluster.local"
          - name: DRONE_KUBERNETES_NAMESPACE
            value: {{ .Release.Namespace }}
          {{- if .Values.server.adminAccount }}
          - name: DRONE_USER_CREATE
            value: "username:{{ .Values.server.adminAccount }},machine:false,admin:true"
          {{- end }}
          {{- range $key, $value := .Values.server.envSecrets }}
          - name: {{ $key }}
            valueFrom:
              secretKeyRef:
                {{- if $.Values.existingSecret }}
                name: {{ $.Values.existingSecret }}
                {{ else }}
                name: {{ template "drone.fullname" $ }}
                {{ end -}}
                key: {{ $key }}
          {{- end }}
          {{- range $key, $value := .Values.server.env }}
          - name: {{ $key }}
            value: {{ $value | quote }}
          {{- end }}
        ports:
        - name: http
          {{- if not (.Values.server.env.DRONE_SERVER_PORT) }}
          containerPort: 80
          {{ else }}
          containerPort: {{ .Values.server.env.DRONE_SERVER_PORT }}
          {{ end -}}
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /
            port: http
        resources:
{{ toYaml .Values.server.resources | indent 10 }}
        volumeMounts:
          - name: data
            mountPath: /data
{{- with .Values.server.extraContainers }}
{{ tpl . $ | indent 6 }}
{{- end }}
      volumes:
      - name: data
      {{- if .Values.persistence.enabled }}
        {{- if .Values.persistence.directVolumeMount }}
{{ tpl .Values.persistence.directVolumeMount . | indent 8 }}
        {{- else }}
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.existingClaim | default (include "drone.fullname" .) }}
        {{- end }}
      {{- else }}
        emptyDir: {}
      {{- end -}}
{{- with .Values.server.extraVolumes }}
{{ tpl . $ | indent 6 }}
{{- end }}
